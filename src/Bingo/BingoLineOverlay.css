.overlay {
  /* || Dimensions */
  /* || Positioning */
  position: absolute;
  inset: 0;
  /* || Design */
  opacity: 0.5;
  /* || Content */
  overflow: hidden;
  /* || Utility */
  pointer-events: none;
}

.crossed {
  /* || Dimensions */
  /* || Positioning */
  position: absolute;
  inset: 0;
  /* || Design */
  /* || Content */
  /* || Utility */
}

.crossed.diagonalForward {
  /* || Dimensions */
  /* || Positioning */
  transform: translate(calc(90vmin * var(--translateX)), calc(90vmin * var(--translateY))) scale(var(--scale));
  /* || Design */
  background:
    linear-gradient(to top left,
      rgba(0, 0, 0, 0) 49%,
      rgba(0, 0, 0, 1) 49%,
      rgba(0, 0, 0, 1) 51%,
      rgba(0, 0, 0, 0) 51%)
  /* || Content */
  /* || Utility */
}

.crossed.diagonalBackward {
  /* || Dimensions */
  /* || Positioning */
  transform: translate(calc(90vmin * var(--translateX)), calc(90vmin * var(--translateY))) scale(var(--scale));
  /* || Design */
  background:
    linear-gradient(to bottom left,
      rgba(0, 0, 0, 0) 49%,
      rgba(0, 0, 0, 1) 49%,
      rgba(0, 0, 0, 1) 51%,
      rgba(0, 0, 0, 0) 51%)
  /* || Content */
  /* || Utility */
}

.crossed.row {
  /* || Dimensions */
  /* || Positioning */
  transform: translateY(calc(90vmin * var(--translateY)));
  /* || Design */
  background:
    linear-gradient(to bottom,
      rgba(0, 0, 0, 0) 48.5%,
      rgba(0, 0, 0, 1) 48.5%,
      rgba(0, 0, 0, 1) 51.5%,
      rgba(0, 0, 0, 0) 51.5%)
  /* || Content */
  /* || Utility */
}

.crossed.column {
  /* || Dimensions */
  /* || Positioning */
  transform: translateX(calc(90vmin * var(--translateX)));
  /* || Design */
  background:
    linear-gradient(to right,
      rgba(0, 0, 0, 0) 48.5%,
      rgba(0, 0, 0, 1) 48.5%,
      rgba(0, 0, 0, 1) 51.5%,
      rgba(0, 0, 0, 0) 51.5%)
  /* || Content */
  /* || Utility */
}